fa.diagram(factana5)
colnames(factana4$loadings) <- c("RecBeh",
"ManRes",
"behKnow",
"SocAff",
"DiscNylon",
"Conhea",
"Conenv",
"PerBeh",
"KnowSou")
#CHiOne fo  gender
chisq.test(table(mastercopy2$Gender,mastercopy2$Q18I1),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q18I2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q18I3),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q15C4),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q15C3),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q15C2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q17P4),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q17P3),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q17P5),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q11C2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q11C4),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q11C5),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q11C1),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q17P1),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q17P2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q10C1),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q10C2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q10C3),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q10C5),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q10C6),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q12C1),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q12C2),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q5K4),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q5K5),correct = FALSE)
chisq.test(table(mastercopy2$Gender,mastercopy2$Q5K1),correct = FALSE)
#Chi Square with Education
chisq.test(table(mastercopy2$Education,mastercopy2$Q18I1),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q18I2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q18I3),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q15C4),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q15C3),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q15C2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q17P4),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q17P3),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q17P5),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q11C2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q11C4),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q11C5),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q11C1),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q17P1),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q17P2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q10C1),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q10C2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q10C3),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q10C5),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q10C6),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q12C1),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q12C2),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q5K4),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q5K5),correct = FALSE)
chisq.test(table(mastercopy2$Education,mastercopy2$Q5K1),correct = FALSE)
#Chi Square with occupation
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q18I1),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q18I2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q18I3),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q15C4),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q15C3),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q15C2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q17P4),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q17P3),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q17P5),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q11C2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q11C4),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q11C5),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q11C1),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q17P1),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q17P2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q10C1),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q10C2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q10C3),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q10C5),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q10C6),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q12C1),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q12C2),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q5K4),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q5K5),correct = FALSE)
chisq.test(table(mastercopy2$Occupation,mastercopy2$Q5K1),correct = FALSE)
#Chi Square with Income
chisq.test(table(mastercopy2$Income,mastercopy2$Q18I1),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q18I2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q18I3),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q15C4),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q15C3),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q15C2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q17P4),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q17P3),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q17P5),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q11C2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q11C4),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q11C5),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q11C1),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q17P1),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q17P2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q10C1),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q10C2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q10C3),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q10C5),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q10C6),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q12C1),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q12C2),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q5K4),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q5K5),correct = FALSE)
chisq.test(table(mastercopy2$Income,mastercopy2$Q5K1),correct = FALSE)
No_miceData <- read.csv("final_No_mice.csv")
#Data without question 19
data_without19 <- No_miceData[,-(61:66)]
#Now we also dont need demographic as per requirement of project
data<-data_without19[,-(1:5)]
decidefactor <- fa.parallel(data,fm ='ml', fa = 'fa')
#Try 1
#Third model with 12 factors
factana7 <- fa(data,nfactors =12)
fa.diagram(factana7)
library(psych)
fa.diagram(factana7$loadings)
install.packages("GPArotation")
library(GPArotation)
factana8 <- fa(data,nfactors = 11)
fa.diagram(factana8)
#keeping only correlated variables keeping cutoff 0.1
install.packages("caret")
library('caret')
data_corelatedNoMice = findCorrelation(cor(data), cutoff=0.3)
data_corelatedNoMice
hc1= sort(data_corelatedNoMice)
data_corelatedNoMice = data[, c(hc1)]
dim(data_corelatedNoMice)
# trying with 11 Factors
factana9 <- fa(data_corelatedNoMice,nfactors = 11)
fa.diagram(factana9)
colnames(factana9$loadings) <- c("reduInt",
"MngRspb",
"RefNyln",
"SocAfct",
"Atitud",
"natConc",
"ruleAbid",
"PercBeh",
"AvoidInt",
"source",
"Environmentlist")
# Trying with 10 factors
factanal10 <- factanal(data_corelatedNoMice, factors = 10)
factanal10
factana10 <- fa(data_corelatedNoMice,nfactors =10)
fa.diagram(factana10)
#trying with 9 factors
factana11 <- fa(data_corelatedNoMice,nfactors =9)
fa.diagram(factana11)
factanal11 <- factanal(data_corelatedNoMice, factors = 9)
factanal11
colnames(factana11$loadings)
colnames(factana11$loadings) <- c("RecBeh",
"MngRspb",
"Rspb",
"SocAfct",
"HltPrcp",
"EnvCons",
"EnvMntlst",
"PercBeh",
"Knldge")
fa.diagram(factana11)
#############################################################################################################################
View(data_only_corelated_try3)
data_only_corelated_try3
#Corelation Short method
cordata <-cor(data_only_corelated_try3)
library(corrplot)
corrplot(cordata, method="number")
#Corelation
cormat <- round(cor(data_only_corelated_try3),2)
head(cormat)
install.packages("reshape2")
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
library(ggplot2)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
# Get lower triangle of the correlation matrix
get_lower_tri<-function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
# Melt the correlation matrix
library(reshape2)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
library(ggplot2)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
# Reorder the correlation matrix
cormat <- reorder_cormat(cormat)
upper_tri <- get_upper_tri(cormat)
# Melt the correlation matrix
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Create a ggheatmap
ggheatmap <- ggplot(melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+ # minimal theme
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
# Print the heatmap
print(ggheatmap)
ggheatmap +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
install.packages("GPArotation")
install.packages("caret")
install.packages("GPArotation")
install.packages("caret")
No_miceData <- read.csv("final_No_mice.csv")
decidefactor <- fa.parallel(No_miceData,fm ='ml', fa = 'fa')
noMicePca <- prcomp(No_miceData,scale= TRUE)
summary(noMicePca)
library("factoextra")
noMiceEig <- get_eigenvalue(noMicePca)
noMiceEig
screeplot(noMicePca,type="line",main="Scree Plot")
plot(noMicePca)
dimNomice <- c(1:14)
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, noMiceEig$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
#StreePlot
fviz_eig(noMicePca)
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
decidefactor <- fa.parallel(No_miceData,fm ='ml', fa = 'fa')
noMiceData[1:10]
No_miceData[1:10]
No_miceData[1:15]
View(No_miceData)
No_miceData[1:19]
noMicePca <- prcomp(No_miceData[1:19],scale= TRUE)
summary(noMicePca)
library("factoextra")
noMiceEig <- get_eigenvalue(noMicePca)
noMiceEig
dimNomice <- c(1:14)
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, noMiceEig$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
#StreePlot
fviz_eig(noMicePca)
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
noMicePca <- prcomp(No_miceData[1:19],scale= TRUE)
summary(noMicePca)
library("factoextra")
noMiceEig <- get_eigenvalue(No_miceData[1:19])
noMiceEig
dimNomice <- c(1:14)
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, No_miceData[1:19]$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
#StreePlot
fviz_eig(No_miceData[1:19])
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#
factana12 <- fa(No_miceData[1:19],nfactors =12)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[1:19],nfactors =8)
fa.diagram(factana12)
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, No_miceData[1:19]$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
#StreePlot
fviz_eig(No_miceData[1:19])
#StreePlot
fviz_eig(No_miceData)
#StreePlot
fviz_eig(noMiceEig)
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
noMicePca <- prcomp(No_miceData[1:19],scale= TRUE)
summary(noMicePca)
library("factoextra")
noMiceEig <- get_eigenvalue(noMicePca)
noMiceEig
dimNomice <- c(1:14)
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, noMiceEig$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
dimNomice <- c(1:19)
#Plot the cumulative percentage variance accounted for versus the index of the Components
plot(dimNomice, noMiceEig$cumulative.variance.percent, ylab = "Commulative Variance",xlab = "Principal Components")
#StreePlot
fviz_eig(noMicePca)
#Loading score
fviz_pca_var(noMicePca,axes = c(1,2),col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#
factana12 <- fa(data,nfactors =12)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[1:19],nfactors =12)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[6:19],nfactors =12)
#
factana12 <- fa(No_miceData[6:19],nfactors =12)
fa.diagram(factana12)
decidefactor <- fa.parallel(No_miceData[6:19],fm ='ml', fa = 'fa')d
decidefactor <- fa.parallel(No_miceData[6:19],fm ='ml', fa = 'fa')
#
factana12 <- fa(No_miceData[6:19],nfactors =5)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[6:19],nfactors =6)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[6:19],nfactors =7)
fa.diagram(factana12)
#
factana12 <- fa(No_miceData[6:19],nfactors =7)
fa.diagram(factana12)
factanal12 <- factanal(No_miceData[6:19], factors = 7)
factanal12
factanal11 <- factanal(data_corelatedNoMice, factors = 9)
factanal11
factanal12 <- factanal(No_miceData[6:19], factors = 9)
factanal12
factanal12 <- factanal(No_miceData[6:19], factors = 12)
factanal12 <- factanal(No_miceData[6:19], factors = 11)
factanal12 <- factanal(No_miceData[6:19], factors = 9)
factanal12
factanal12 <- factanal(No_miceData[6:19], factors = 10)
#
factana12 <- fa(No_miceData[6:19],nfactors =9)
fa.diagram(factana12)
factanal12 <- factanal(No_miceData[1:19], factors = 9)
factanal12
factanal12 <- factanal(No_miceData[1:19], factors = 10)
factanal12
factanal12 <- factanal(No_miceData[1:19], factors = 10)
factanal12 <- factanal(No_miceData[1:19], factors = 11)
factanal12
factanal12 <- factanal(No_miceData[1:19], factors = 13)
factanal12 <- factanal(No_miceData[1:19], factors = 12)
factanal12 <- factanal(No_miceData[1:19], factors = 11)
factanal12 <- factanal(No_miceData[1:19], factors = 14)
factanal12 <- factanal(No_miceData[1:19], factors = 13)
factanal12 <- factanal(No_miceData[1:19], factors = 11)
factanal12
#
factana12 <- fa(No_miceData[6:19],nfactors =11)
fa.diagram(factana12)
decidefactor <- fa.parallel(No_miceData[6:19],fm ='ml', fa = 'fa')
factanal12 <- factanal(No_miceData[1:19], factors = 4)
factanal12
#
factana12 <- fa(No_miceData[6:19],nfactors =4)
fa.diagram(factana12)
factanal12 <- factanal(No_miceData[1:19], factors = 8)
factanal12
#
factana12 <- fa(No_miceData[6:19],nfactors =8)
#
factana12 <- fa(No_miceData[6:19],nfactors =8)
fa.diagram(factana12)
summary(factana12)
No_miceData <- read.csv("final_No_mice.csv")
#Data without question 19
data_without19 <- No_miceData[,-(61:66)]
#Now we also dont need demographic as per requirement of project
data<-data_without19[,-(1:5)]
#Try 1
#Third model with 12 factors
factana7 <- fa(data,nfactors =12)
#Try 1
#Third model with 12 factors
factana7 <- fa(data,nfactors =12)
#Try 1
#Third model with 12 factors
factana7 <- fa(data,nfactors =12)
fa.diagram(factana7)
summary(factana7)
fa.diagram(factana7$loadings)
factanal7 <- factanal(data, nfactors = 12)
factanal7 <- factanal(data, factors = 12)
factanal7
factana8 <- fa(data,nfactors = 11)
factana8 <- fa(data,nfactors = 11)
fa.diagram(factana8)
summary(factana8)
factanal8 <- factanal(data, factors = 12)
factanal8
factana8 <- fa(data,nfactors = 11)
fa.diagram(factana8)
summary(factana8)
factanal8 <- factanal(data, factors = 11)
factanal8
# trying with 11 Factors
factana9 <- fa(data_corelatedNoMice,nfactors = 11)
fa.diagram(factana9)
factanal8 <- factanal(data, factors = 11)
factanal8
summary(factana9)
# Trying with 10 factors
factanal10 <- factanal(data, factors = 10)
factanal10
factana10 <- fa(data,nfactors =10)
factana10 <- fa(data,nfactors =10)
summary(factana10)
#trying with 9 factors
factana11 <- fa(data,nfactors =9)
fa.diagram(factana11)
summary(factana11)
factanal11 <- factanal(data, factors = 9)
factanal11
#trying with 8 factors
factana11 <- fa(data,nfactors =8)
fa.diagram(factana11)
summary(factana11)
factanal11 <- factanal(data, factors = 8)
factanal11
factana12 <- fa(data_corelatedNoMice,nfactors = 12)
factana12 <- fa(data_corelatedNoMice,nfactors = 12)
fa.diagram(factana12)
summary(factana12)
factanal12 <- factanal(data_corelatedNoMice, factors = 12)
factanal12
# try with corelated
factana13 <- fa(data_corelatedNoMice,nfactors = 11)
fa.diagram(factana13)
summary(factana13)
factanal13 <- factanal(data_corelatedNoMice, factors = 11)
factanal13
############
# try with corelated
factana12 <- fa(data_corelatedNoMice,nfactors = 12)
fa.diagram(factana12)
summary(factana12)
factanal12 <- factanal(data_corelatedNoMice, factors = 12)
factanal12
fdf <- factanal(data_corelatedNoMice, factors = 12)
fdf
summary(factana12)
fdf <- factanal(data_corelatedNoMice, factors = 12)
fdf <- factanal(data_corelatedNoMice, factors = 13)
fdf
fdf <- factanal(data_corelatedNoMice, factors = 14)
fdf <- factanal(data_corelatedNoMice, factors = 11)
factana12 <- factanal(data_corelatedNoMice, factors = 11)
factana12
factana12 <- factanal(data_corelatedNoMice, factors = 12)
factana12
############
# try with corelated
factana12 <- fa(data_corelatedNoMice,nfactors = 12)
fa.diagram(factana12)
summary(factana12)
# try with corelated
factana14 <- fa(data_corelatedNoMice,nfactors = 10)
fa.diagram(factana14)
summary(factana14)
factanal14 <- factanal(data_corelatedNoMice, factors = 10)
factanal14
# try with corelated
factana15 <- fa(data_corelatedNoMice,nfactors = 9)
fa.diagram(factana15)
summary(factana15)
factanal15 <- factanal(data_corelatedNoMice, factors = 9)
factanal15
# try with corelated
factana16 <- fa(data_corelatedNoMice,nfactors = 8)
fa.diagram(factana16)
summary(factana16)
factanal16 <- factanal(data_corelatedNoMice, factors = 8)
factanal16
